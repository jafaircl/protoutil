// @generated by protoc-gen-es v2.5.1 with parameter "target=ts,import_extension=.js,ts_nocheck=false"
// @generated from file google/protobuf/unittest_delimited.proto (package editions_unittest, edition 2023)
/* eslint-disable */

import type { GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { MessageImport } from "./unittest_delimited_import_pb.js";
import { file_google_protobuf_unittest_delimited_import } from "./unittest_delimited_import_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/protobuf/unittest_delimited.proto.
 */
export const file_google_protobuf_unittest_delimited: GenFile = /*@__PURE__*/
  fileDesc("Cihnb29nbGUvcHJvdG9idWYvdW5pdHRlc3RfZGVsaW1pdGVkLnByb3RvEhFlZGl0aW9uc191bml0dGVzdCImCg5MZW5ndGhQcmVmaXhlZBIJCgFhGAEgASgFEgkKAWIYAiABKAUiKQoRTm90R3JvdXBMaWtlU2NvcGUSCQoBYRgBIAEoBRIJCgFiGAIgASgFIioKEkdyb3VwTGlrZUZpbGVTY29wZRIJCgFhGAEgASgFEgkKAWIYAiABKAUi/gMKDVRlc3REZWxpbWl0ZWQSRwoObGVuZ3RocHJlZml4ZWQYASABKAsyLy5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkLkxlbmd0aFByZWZpeGVkEjcKBm5lc3RlZBgCIAEoCzIgLmVkaXRpb25zX3VuaXR0ZXN0LlRlc3REZWxpbWl0ZWRCBaoBAigCEkQKCWdyb3VwbGlrZRgDIAEoCzIqLmVkaXRpb25zX3VuaXR0ZXN0LlRlc3REZWxpbWl0ZWQuR3JvdXBMaWtlQgWqAQIoAhJHCgxub3Rncm91cGxpa2UYBCABKAsyKi5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkLkdyb3VwTGlrZUIFqgECKAISRgoRbm90Z3JvdXBsaWtlc2NvcGUYBSABKAsyJC5lZGl0aW9uc191bml0dGVzdC5Ob3RHcm91cExpa2VTY29wZUIFqgECKAISPgoNbWVzc2FnZWltcG9ydBgGIAEoCzIgLmVkaXRpb25zX3VuaXR0ZXN0Lk1lc3NhZ2VJbXBvcnRCBaoBAigCGiYKDkxlbmd0aFByZWZpeGVkEgkKAWEYASABKAUSCQoBYhgCIAEoBRohCglHcm91cExpa2USCQoBYRgBIAEoBRIJCgFiGAIgASgFKgkI6AcQgICAgAI6bAoObGVuZ3RocHJlZml4ZWQSIC5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkGOwHIAEoCzIhLmVkaXRpb25zX3VuaXR0ZXN0Lkxlbmd0aFByZWZpeGVkUg5sZW5ndGhwcmVmaXhlZDp/ChJncm91cGxpa2VmaWxlc2NvcGUSIC5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkGOgHIAEoCzIlLmVkaXRpb25zX3VuaXR0ZXN0Lkdyb3VwTGlrZUZpbGVTY29wZUIFqgECKAJSEmdyb3VwbGlrZWZpbGVzY29wZTp/ChRub3RfZ3JvdXBfbGlrZV9zY29wZRIgLmVkaXRpb25zX3VuaXR0ZXN0LlRlc3REZWxpbWl0ZWQY6QcgASgLMiQuZWRpdGlvbnNfdW5pdHRlc3QuTm90R3JvdXBMaWtlU2NvcGVCBaoBAigCUhFub3RHcm91cExpa2VTY29wZTpyCglncm91cGxpa2USIC5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkGOoHIAEoCzIqLmVkaXRpb25zX3VuaXR0ZXN0LlRlc3REZWxpbWl0ZWQuR3JvdXBMaWtlQgWqAQIoAlIJZ3JvdXBsaWtlOnAKDW1lc3NhZ2VpbXBvcnQSIC5lZGl0aW9uc191bml0dGVzdC5UZXN0RGVsaW1pdGVkGOsHIAEoCzIgLmVkaXRpb25zX3VuaXR0ZXN0Lk1lc3NhZ2VJbXBvcnRCBaoBAigCUg1tZXNzYWdlaW1wb3J0QgJQAWIIZWRpdGlvbnNw6Ac", [file_google_protobuf_unittest_delimited_import]);

/**
 * @generated from message editions_unittest.LengthPrefixed
 */
export type LengthPrefixed = Message<"editions_unittest.LengthPrefixed"> & {
  /**
   * @generated from field: int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message editions_unittest.LengthPrefixed.
 * Use `create(LengthPrefixedSchema)` to create a new message.
 */
export const LengthPrefixedSchema: GenMessage<LengthPrefixed> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 0);

/**
 * @generated from message editions_unittest.NotGroupLikeScope
 */
export type NotGroupLikeScope = Message<"editions_unittest.NotGroupLikeScope"> & {
  /**
   * @generated from field: int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message editions_unittest.NotGroupLikeScope.
 * Use `create(NotGroupLikeScopeSchema)` to create a new message.
 */
export const NotGroupLikeScopeSchema: GenMessage<NotGroupLikeScope> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 1);

/**
 * @generated from message editions_unittest.GroupLikeFileScope
 */
export type GroupLikeFileScope = Message<"editions_unittest.GroupLikeFileScope"> & {
  /**
   * @generated from field: int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message editions_unittest.GroupLikeFileScope.
 * Use `create(GroupLikeFileScopeSchema)` to create a new message.
 */
export const GroupLikeFileScopeSchema: GenMessage<GroupLikeFileScope> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 2);

/**
 * @generated from message editions_unittest.TestDelimited
 */
export type TestDelimited = Message<"editions_unittest.TestDelimited"> & {
  /**
   * Non-delimited field that otherwise looks group-like.
   *
   * @generated from field: editions_unittest.TestDelimited.LengthPrefixed lengthprefixed = 1;
   */
  lengthprefixed?: TestDelimited_LengthPrefixed;

  /**
   * Nested field for nested tests.
   *
   * @generated from field: editions_unittest.TestDelimited nested = 2 [features.message_encoding = DELIMITED];
   */
  nested?: TestDelimited;

  /**
   * Truly group-like field.
   *
   * @generated from field: editions_unittest.TestDelimited.GroupLike grouplike = 3 [features.message_encoding = DELIMITED];
   */
  grouplike?: TestDelimited_GroupLike;

  /**
   * Delimited field that isn't group-like solely because of its name.
   *
   * @generated from field: editions_unittest.TestDelimited.GroupLike notgrouplike = 4 [features.message_encoding = DELIMITED];
   */
  notgrouplike?: TestDelimited_GroupLike;

  /**
   * Delimited field that isn't group-like because of the scope of its type.
   *
   * @generated from field: editions_unittest.NotGroupLikeScope notgrouplikescope = 5 [features.message_encoding = DELIMITED];
   */
  notgrouplikescope?: NotGroupLikeScope;

  /**
   * Delimited field that's grouplike except that it's an imported type.
   *
   * @generated from field: editions_unittest.MessageImport messageimport = 6 [features.message_encoding = DELIMITED];
   */
  messageimport?: MessageImport;
};

/**
 * Describes the message editions_unittest.TestDelimited.
 * Use `create(TestDelimitedSchema)` to create a new message.
 */
export const TestDelimitedSchema: GenMessage<TestDelimited> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 3);

/**
 * @generated from message editions_unittest.TestDelimited.LengthPrefixed
 */
export type TestDelimited_LengthPrefixed = Message<"editions_unittest.TestDelimited.LengthPrefixed"> & {
  /**
   * @generated from field: int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message editions_unittest.TestDelimited.LengthPrefixed.
 * Use `create(TestDelimited_LengthPrefixedSchema)` to create a new message.
 */
export const TestDelimited_LengthPrefixedSchema: GenMessage<TestDelimited_LengthPrefixed> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 3, 0);

/**
 * @generated from message editions_unittest.TestDelimited.GroupLike
 */
export type TestDelimited_GroupLike = Message<"editions_unittest.TestDelimited.GroupLike"> & {
  /**
   * @generated from field: int32 a = 1;
   */
  a: number;

  /**
   * @generated from field: int32 b = 2;
   */
  b: number;
};

/**
 * Describes the message editions_unittest.TestDelimited.GroupLike.
 * Use `create(TestDelimited_GroupLikeSchema)` to create a new message.
 */
export const TestDelimited_GroupLikeSchema: GenMessage<TestDelimited_GroupLike> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_delimited, 3, 1);

/**
 * Non-delimited field that otherwise looks group-like.
 *
 * @generated from extension: editions_unittest.LengthPrefixed lengthprefixed = 1004;
 */
export const lengthprefixed: GenExtension<TestDelimited, LengthPrefixed> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_delimited, 0);

/**
 * Truly group-like extension.
 *
 * @generated from extension: editions_unittest.GroupLikeFileScope grouplikefilescope = 1000 [features.message_encoding = DELIMITED];
 */
export const grouplikefilescope: GenExtension<TestDelimited, GroupLikeFileScope> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_delimited, 1);

/**
 * Delimited extension that isn't group-like because of its name.
 *
 * @generated from extension: editions_unittest.NotGroupLikeScope not_group_like_scope = 1001 [features.message_encoding = DELIMITED];
 */
export const not_group_like_scope: GenExtension<TestDelimited, NotGroupLikeScope> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_delimited, 2);

/**
 * Delimited extension that isn't group-like because of the scope of its type.
 *
 * @generated from extension: editions_unittest.TestDelimited.GroupLike grouplike = 1002 [features.message_encoding = DELIMITED];
 */
export const grouplike: GenExtension<TestDelimited, TestDelimited_GroupLike> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_delimited, 3);

/**
 * Delimited extension that's grouplike except that it's an imported type.
 *
 * @generated from extension: editions_unittest.MessageImport messageimport = 1003 [features.message_encoding = DELIMITED];
 */
export const messageimport: GenExtension<TestDelimited, MessageImport> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_delimited, 4);

