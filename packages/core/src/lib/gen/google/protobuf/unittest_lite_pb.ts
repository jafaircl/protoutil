// @generated by protoc-gen-es v2.5.1 with parameter "target=ts,import_extension=.js,ts_nocheck=false"
// @generated from file google/protobuf/unittest_lite.proto (package proto2_unittest, edition 2023)
// option features.enum_type = CLOSED;
// option features.repeated_field_encoding = EXPANDED;
// option features.utf8_validation = NONE;
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { ImportEnumLite, ImportMessageLite } from "./unittest_import_lite_pb.js";
import { file_google_protobuf_unittest_import_lite } from "./unittest_import_lite_pb.js";
import type { Message } from "@bufbuild/protobuf";
import type { PublicImportMessageLite } from "./unittest_import_public_lite_pb.js";

/**
 * Describes the file google/protobuf/unittest_lite.proto.
 */
export const file_google_protobuf_unittest_lite: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_unittest_import_lite]);

/**
 * Same as TestAllTypes but with the lite runtime.
 *
 * @generated from message proto2_unittest.TestAllTypesLite
 */
export type TestAllTypesLite = Message<"proto2_unittest.TestAllTypesLite"> & {
  /**
   * Singular
   *
   * @generated from field: int32 optional_int32 = 1;
   */
  optionalInt32: number;

  /**
   * @generated from field: int64 optional_int64 = 2;
   */
  optionalInt64: bigint;

  /**
   * @generated from field: uint32 optional_uint32 = 3;
   */
  optionalUint32: number;

  /**
   * @generated from field: uint64 optional_uint64 = 4;
   */
  optionalUint64: bigint;

  /**
   * @generated from field: sint32 optional_sint32 = 5;
   */
  optionalSint32: number;

  /**
   * @generated from field: sint64 optional_sint64 = 6;
   */
  optionalSint64: bigint;

  /**
   * @generated from field: fixed32 optional_fixed32 = 7;
   */
  optionalFixed32: number;

  /**
   * @generated from field: fixed64 optional_fixed64 = 8;
   */
  optionalFixed64: bigint;

  /**
   * @generated from field: sfixed32 optional_sfixed32 = 9;
   */
  optionalSfixed32: number;

  /**
   * @generated from field: sfixed64 optional_sfixed64 = 10;
   */
  optionalSfixed64: bigint;

  /**
   * @generated from field: float optional_float = 11;
   */
  optionalFloat: number;

  /**
   * @generated from field: double optional_double = 12;
   */
  optionalDouble: number;

  /**
   * @generated from field: bool optional_bool = 13;
   */
  optionalBool: boolean;

  /**
   * @generated from field: string optional_string = 14;
   */
  optionalString: string;

  /**
   * @generated from field: bytes optional_bytes = 15;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.OptionalGroup optionalgroup = 16 [features.message_encoding = DELIMITED];
   */
  optionalgroup?: TestAllTypesLite_OptionalGroup;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
   */
  optionalNestedMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: proto2_unittest.ForeignMessageLite optional_foreign_message = 19;
   */
  optionalForeignMessage?: ForeignMessageLite;

  /**
   * @generated from field: proto2_unittest_import.ImportMessageLite optional_import_message = 20;
   */
  optionalImportMessage?: ImportMessageLite;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
   */
  optionalNestedEnum: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: proto2_unittest.ForeignEnumLite optional_foreign_enum = 22;
   */
  optionalForeignEnum: ForeignEnumLite;

  /**
   * @generated from field: proto2_unittest_import.ImportEnumLite optional_import_enum = 23;
   */
  optionalImportEnum: ImportEnumLite;

  /**
   * @generated from field: string optional_string_piece = 24;
   */
  optionalStringPiece: string;

  /**
   * @generated from field: string optional_cord = 25;
   */
  optionalCord: string;

  /**
   * @generated from field: bytes optional_bytes_cord = 86;
   */
  optionalBytesCord: Uint8Array;

  /**
   * Defined in unittest_import_public.proto
   *
   * @generated from field: proto2_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
   */
  optionalPublicImportMessage?: PublicImportMessageLite;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27;
   */
  optionalLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28;
   */
  optionalUnverifiedLazyMessage?: TestAllTypesLite_NestedMessage;

  /**
   * Repeated
   *
   * @generated from field: repeated int32 repeated_int32 = 31;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int64 repeated_int64 = 32;
   */
  repeatedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 repeated_uint32 = 33;
   */
  repeatedUint32: number[];

  /**
   * @generated from field: repeated uint64 repeated_uint64 = 34;
   */
  repeatedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 repeated_sint32 = 35;
   */
  repeatedSint32: number[];

  /**
   * @generated from field: repeated sint64 repeated_sint64 = 36;
   */
  repeatedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 37;
   */
  repeatedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 repeated_fixed64 = 38;
   */
  repeatedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 repeated_sfixed32 = 39;
   */
  repeatedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 repeated_sfixed64 = 40;
   */
  repeatedSfixed64: bigint[];

  /**
   * @generated from field: repeated float repeated_float = 41;
   */
  repeatedFloat: number[];

  /**
   * @generated from field: repeated double repeated_double = 42;
   */
  repeatedDouble: number[];

  /**
   * @generated from field: repeated bool repeated_bool = 43;
   */
  repeatedBool: boolean[];

  /**
   * @generated from field: repeated string repeated_string = 44;
   */
  repeatedString: string[];

  /**
   * @generated from field: repeated bytes repeated_bytes = 45;
   */
  repeatedBytes: Uint8Array[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite.RepeatedGroup repeatedgroup = 46 [features.message_encoding = DELIMITED];
   */
  repeatedgroup: TestAllTypesLite_RepeatedGroup[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
   */
  repeatedNestedMessage: TestAllTypesLite_NestedMessage[];

  /**
   * @generated from field: repeated proto2_unittest.ForeignMessageLite repeated_foreign_message = 49;
   */
  repeatedForeignMessage: ForeignMessageLite[];

  /**
   * @generated from field: repeated proto2_unittest_import.ImportMessageLite repeated_import_message = 50;
   */
  repeatedImportMessage: ImportMessageLite[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
   */
  repeatedNestedEnum: TestAllTypesLite_NestedEnum[];

  /**
   * @generated from field: repeated proto2_unittest.ForeignEnumLite repeated_foreign_enum = 52;
   */
  repeatedForeignEnum: ForeignEnumLite[];

  /**
   * @generated from field: repeated proto2_unittest_import.ImportEnumLite repeated_import_enum = 53;
   */
  repeatedImportEnum: ImportEnumLite[];

  /**
   * @generated from field: repeated string repeated_string_piece = 54;
   */
  repeatedStringPiece: string[];

  /**
   * @generated from field: repeated string repeated_cord = 55;
   */
  repeatedCord: string[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57;
   */
  repeatedLazyMessage: TestAllTypesLite_NestedMessage[];

  /**
   * Singular with defaults
   *
   * @generated from field: int32 default_int32 = 61 [default = 41];
   */
  defaultInt32: number;

  /**
   * @generated from field: int64 default_int64 = 62 [default = 42];
   */
  defaultInt64: bigint;

  /**
   * @generated from field: uint32 default_uint32 = 63 [default = 43];
   */
  defaultUint32: number;

  /**
   * @generated from field: uint64 default_uint64 = 64 [default = 44];
   */
  defaultUint64: bigint;

  /**
   * @generated from field: sint32 default_sint32 = 65 [default = -45];
   */
  defaultSint32: number;

  /**
   * @generated from field: sint64 default_sint64 = 66 [default = 46];
   */
  defaultSint64: bigint;

  /**
   * @generated from field: fixed32 default_fixed32 = 67 [default = 47];
   */
  defaultFixed32: number;

  /**
   * @generated from field: fixed64 default_fixed64 = 68 [default = 48];
   */
  defaultFixed64: bigint;

  /**
   * @generated from field: sfixed32 default_sfixed32 = 69 [default = 49];
   */
  defaultSfixed32: number;

  /**
   * @generated from field: sfixed64 default_sfixed64 = 70 [default = -50];
   */
  defaultSfixed64: bigint;

  /**
   * @generated from field: float default_float = 71 [default = 51.5];
   */
  defaultFloat: number;

  /**
   * @generated from field: double default_double = 72 [default = 52000];
   */
  defaultDouble: number;

  /**
   * @generated from field: bool default_bool = 73 [default = true];
   */
  defaultBool: boolean;

  /**
   * @generated from field: string default_string = 74 [default = "hello"];
   */
  defaultString: string;

  /**
   * @generated from field: bytes default_bytes = 75 [default = "world"];
   */
  defaultBytes: Uint8Array;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
   */
  defaultNestedEnum: TestAllTypesLite_NestedEnum;

  /**
   * @generated from field: proto2_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
   */
  defaultForeignEnum: ForeignEnumLite;

  /**
   * @generated from field: proto2_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
   */
  defaultImportEnum: ImportEnumLite;

  /**
   * @generated from field: string default_string_piece = 84 [default = "abc"];
   */
  defaultStringPiece: string;

  /**
   * @generated from field: string default_cord = 85 [default = "123"];
   */
  defaultCord: string;

  /**
   * For oneof test
   *
   * @generated from oneof proto2_unittest.TestAllTypesLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 111;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofNestedMessage";
  } | {
    /**
     * @generated from field: string oneof_string = 113;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 114;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115;
     */
    value: TestAllTypesLite_NestedMessage;
    case: "oneofLazyNestedMessage";
  } | {
    /**
     * @generated from field: proto2_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
     */
    value: TestAllTypesLite_NestedMessage2;
    case: "oneofNestedMessage2";
  } | { case: undefined; value?: undefined };

  /**
   * Tests toString for non-repeated fields with a list suffix
   *
   * @generated from field: int32 deceptively_named_list = 116;
   */
  deceptivelyNamedList: number;
};

/**
 * Describes the message proto2_unittest.TestAllTypesLite.
 * Use `create(TestAllTypesLiteSchema)` to create a new message.
 */
export const TestAllTypesLiteSchema: GenMessage<TestAllTypesLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 0);

/**
 * @generated from message proto2_unittest.TestAllTypesLite.NestedMessage
 */
export type TestAllTypesLite_NestedMessage = Message<"proto2_unittest.TestAllTypesLite.NestedMessage"> & {
  /**
   * @generated from field: int32 bb = 1;
   */
  bb: number;

  /**
   * @generated from field: int64 cc = 2;
   */
  cc: bigint;

  /**
   * @generated from field: repeated int32 dd = 3 [features.repeated_field_encoding = PACKED];
   */
  dd: number[];
};

/**
 * Describes the message proto2_unittest.TestAllTypesLite.NestedMessage.
 * Use `create(TestAllTypesLite_NestedMessageSchema)` to create a new message.
 */
export const TestAllTypesLite_NestedMessageSchema: GenMessage<TestAllTypesLite_NestedMessage> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 0, 0);

/**
 * @generated from message proto2_unittest.TestAllTypesLite.NestedMessage2
 */
export type TestAllTypesLite_NestedMessage2 = Message<"proto2_unittest.TestAllTypesLite.NestedMessage2"> & {
  /**
   * @generated from field: int32 dd = 1;
   */
  dd: number;
};

/**
 * Describes the message proto2_unittest.TestAllTypesLite.NestedMessage2.
 * Use `create(TestAllTypesLite_NestedMessage2Schema)` to create a new message.
 */
export const TestAllTypesLite_NestedMessage2Schema: GenMessage<TestAllTypesLite_NestedMessage2> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 0, 1);

/**
 * @generated from message proto2_unittest.TestAllTypesLite.OptionalGroup
 */
export type TestAllTypesLite_OptionalGroup = Message<"proto2_unittest.TestAllTypesLite.OptionalGroup"> & {
  /**
   * @generated from field: int32 a = 17;
   */
  a: number;
};

/**
 * Describes the message proto2_unittest.TestAllTypesLite.OptionalGroup.
 * Use `create(TestAllTypesLite_OptionalGroupSchema)` to create a new message.
 */
export const TestAllTypesLite_OptionalGroupSchema: GenMessage<TestAllTypesLite_OptionalGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 0, 2);

/**
 * @generated from message proto2_unittest.TestAllTypesLite.RepeatedGroup
 */
export type TestAllTypesLite_RepeatedGroup = Message<"proto2_unittest.TestAllTypesLite.RepeatedGroup"> & {
  /**
   * @generated from field: int32 a = 47;
   */
  a: number;
};

/**
 * Describes the message proto2_unittest.TestAllTypesLite.RepeatedGroup.
 * Use `create(TestAllTypesLite_RepeatedGroupSchema)` to create a new message.
 */
export const TestAllTypesLite_RepeatedGroupSchema: GenMessage<TestAllTypesLite_RepeatedGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 0, 3);

/**
 * @generated from enum proto2_unittest.TestAllTypesLite.NestedEnum
 */
export enum TestAllTypesLite_NestedEnum {
  /**
   * @generated from enum value: FOO = 1;
   */
  FOO = 1,

  /**
   * @generated from enum value: BAR = 2;
   */
  BAR = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,
}

/**
 * Describes the enum proto2_unittest.TestAllTypesLite.NestedEnum.
 */
export const TestAllTypesLite_NestedEnumSchema: GenEnum<TestAllTypesLite_NestedEnum> = /*@__PURE__*/
  enumDesc(file_google_protobuf_unittest_lite, 0, 0);

/**
 * @generated from message proto2_unittest.ForeignMessageLite
 */
export type ForeignMessageLite = Message<"proto2_unittest.ForeignMessageLite"> & {
  /**
   * @generated from field: int32 c = 1;
   */
  c: number;
};

/**
 * Describes the message proto2_unittest.ForeignMessageLite.
 * Use `create(ForeignMessageLiteSchema)` to create a new message.
 */
export const ForeignMessageLiteSchema: GenMessage<ForeignMessageLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 1);

/**
 * @generated from message proto2_unittest.TestPackedTypesLite
 */
export type TestPackedTypesLite = Message<"proto2_unittest.TestPackedTypesLite"> & {
  /**
   * @generated from field: repeated int32 packed_int32 = 90 [features.repeated_field_encoding = PACKED];
   */
  packedInt32: number[];

  /**
   * @generated from field: repeated int64 packed_int64 = 91 [features.repeated_field_encoding = PACKED];
   */
  packedInt64: bigint[];

  /**
   * @generated from field: repeated uint32 packed_uint32 = 92 [features.repeated_field_encoding = PACKED];
   */
  packedUint32: number[];

  /**
   * @generated from field: repeated uint64 packed_uint64 = 93 [features.repeated_field_encoding = PACKED];
   */
  packedUint64: bigint[];

  /**
   * @generated from field: repeated sint32 packed_sint32 = 94 [features.repeated_field_encoding = PACKED];
   */
  packedSint32: number[];

  /**
   * @generated from field: repeated sint64 packed_sint64 = 95 [features.repeated_field_encoding = PACKED];
   */
  packedSint64: bigint[];

  /**
   * @generated from field: repeated fixed32 packed_fixed32 = 96 [features.repeated_field_encoding = PACKED];
   */
  packedFixed32: number[];

  /**
   * @generated from field: repeated fixed64 packed_fixed64 = 97 [features.repeated_field_encoding = PACKED];
   */
  packedFixed64: bigint[];

  /**
   * @generated from field: repeated sfixed32 packed_sfixed32 = 98 [features.repeated_field_encoding = PACKED];
   */
  packedSfixed32: number[];

  /**
   * @generated from field: repeated sfixed64 packed_sfixed64 = 99 [features.repeated_field_encoding = PACKED];
   */
  packedSfixed64: bigint[];

  /**
   * @generated from field: repeated float packed_float = 100 [features.repeated_field_encoding = PACKED];
   */
  packedFloat: number[];

  /**
   * @generated from field: repeated double packed_double = 101 [features.repeated_field_encoding = PACKED];
   */
  packedDouble: number[];

  /**
   * @generated from field: repeated bool packed_bool = 102 [features.repeated_field_encoding = PACKED];
   */
  packedBool: boolean[];

  /**
   * @generated from field: repeated proto2_unittest.ForeignEnumLite packed_enum = 103 [features.repeated_field_encoding = PACKED];
   */
  packedEnum: ForeignEnumLite[];
};

/**
 * Describes the message proto2_unittest.TestPackedTypesLite.
 * Use `create(TestPackedTypesLiteSchema)` to create a new message.
 */
export const TestPackedTypesLiteSchema: GenMessage<TestPackedTypesLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 2);

/**
 * @generated from message proto2_unittest.TestAllExtensionsLite
 */
export type TestAllExtensionsLite = Message<"proto2_unittest.TestAllExtensionsLite"> & {
};

/**
 * Describes the message proto2_unittest.TestAllExtensionsLite.
 * Use `create(TestAllExtensionsLiteSchema)` to create a new message.
 */
export const TestAllExtensionsLiteSchema: GenMessage<TestAllExtensionsLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 3);

/**
 * @generated from message proto2_unittest.OptionalGroup_extension_lite
 */
export type OptionalGroup_extension_lite = Message<"proto2_unittest.OptionalGroup_extension_lite"> & {
  /**
   * @generated from field: int32 a = 17;
   */
  a: number;
};

/**
 * Describes the message proto2_unittest.OptionalGroup_extension_lite.
 * Use `create(OptionalGroup_extension_liteSchema)` to create a new message.
 */
export const OptionalGroup_extension_liteSchema: GenMessage<OptionalGroup_extension_lite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 4);

/**
 * @generated from message proto2_unittest.RepeatedGroup_extension_lite
 */
export type RepeatedGroup_extension_lite = Message<"proto2_unittest.RepeatedGroup_extension_lite"> & {
  /**
   * @generated from field: int32 a = 47;
   */
  a: number;
};

/**
 * Describes the message proto2_unittest.RepeatedGroup_extension_lite.
 * Use `create(RepeatedGroup_extension_liteSchema)` to create a new message.
 */
export const RepeatedGroup_extension_liteSchema: GenMessage<RepeatedGroup_extension_lite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 5);

/**
 * @generated from message proto2_unittest.TestPackedExtensionsLite
 */
export type TestPackedExtensionsLite = Message<"proto2_unittest.TestPackedExtensionsLite"> & {
};

/**
 * Describes the message proto2_unittest.TestPackedExtensionsLite.
 * Use `create(TestPackedExtensionsLiteSchema)` to create a new message.
 */
export const TestPackedExtensionsLiteSchema: GenMessage<TestPackedExtensionsLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 6);

/**
 * @generated from message proto2_unittest.TestNestedExtensionLite
 */
export type TestNestedExtensionLite = Message<"proto2_unittest.TestNestedExtensionLite"> & {
};

/**
 * Describes the message proto2_unittest.TestNestedExtensionLite.
 * Use `create(TestNestedExtensionLiteSchema)` to create a new message.
 */
export const TestNestedExtensionLiteSchema: GenMessage<TestNestedExtensionLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 7);

/**
 * @generated from extension: int32 nested_extension = 12345;
 */
export const TestNestedExtensionLite_nested_extension: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 7, 0);

/**
 * Test that deprecated fields work.  We only verify that they compile (at one
 * point this failed).
 *
 * @generated from message proto2_unittest.TestDeprecatedLite
 */
export type TestDeprecatedLite = Message<"proto2_unittest.TestDeprecatedLite"> & {
  /**
   * @generated from field: int32 deprecated_field = 1 [deprecated = true];
   * @deprecated
   */
  deprecatedField: number;

  /**
   * @generated from field: int32 deprecated_field2 = 2 [deprecated = true, features.field_presence = LEGACY_REQUIRED];
   * @deprecated
   */
  deprecatedField2: number;

  /**
   * @generated from field: string deprecated_field3 = 3 [deprecated = true];
   * @deprecated
   */
  deprecatedField3: string;

  /**
   * @generated from field: proto2_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
   * @deprecated
   */
  deprecatedField4?: TestDeprecatedLite;
};

/**
 * Describes the message proto2_unittest.TestDeprecatedLite.
 * Use `create(TestDeprecatedLiteSchema)` to create a new message.
 */
export const TestDeprecatedLiteSchema: GenMessage<TestDeprecatedLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 8);

/**
 * See the comments of the same type in unittest.proto.
 *
 * @generated from message proto2_unittest.TestParsingMergeLite
 */
export type TestParsingMergeLite = Message<"proto2_unittest.TestParsingMergeLite"> & {
  /**
   * @generated from field: proto2_unittest.TestAllTypesLite required_all_types = 1 [features.field_presence = LEGACY_REQUIRED];
   */
  requiredAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: proto2_unittest.TestAllTypesLite optional_all_types = 2;
   */
  optionalAllTypes?: TestAllTypesLite;

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite repeated_all_types = 3;
   */
  repeatedAllTypes: TestAllTypesLite[];

  /**
   * @generated from field: proto2_unittest.TestParsingMergeLite.OptionalGroup optionalgroup = 10 [features.message_encoding = DELIMITED];
   */
  optionalgroup?: TestParsingMergeLite_OptionalGroup;

  /**
   * @generated from field: repeated proto2_unittest.TestParsingMergeLite.RepeatedGroup repeatedgroup = 20 [features.message_encoding = DELIMITED];
   */
  repeatedgroup: TestParsingMergeLite_RepeatedGroup[];
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.
 * Use `create(TestParsingMergeLiteSchema)` to create a new message.
 */
export const TestParsingMergeLiteSchema: GenMessage<TestParsingMergeLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9);

/**
 * @generated from message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator
 */
export type TestParsingMergeLite_RepeatedFieldsGenerator = Message<"proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator"> & {
  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite field1 = 1;
   */
  field1: TestAllTypesLite[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite field2 = 2;
   */
  field2: TestAllTypesLite[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite field3 = 3;
   */
  field3: TestAllTypesLite[];

  /**
   * @generated from field: repeated proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1 group1 = 10 [features.message_encoding = DELIMITED];
   */
  group1: TestParsingMergeLite_RepeatedFieldsGenerator_Group1[];

  /**
   * @generated from field: repeated proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2 group2 = 20 [features.message_encoding = DELIMITED];
   */
  group2: TestParsingMergeLite_RepeatedFieldsGenerator_Group2[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite ext1 = 1000;
   */
  ext1: TestAllTypesLite[];

  /**
   * @generated from field: repeated proto2_unittest.TestAllTypesLite ext2 = 1001;
   */
  ext2: TestAllTypesLite[];
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.
 * Use `create(TestParsingMergeLite_RepeatedFieldsGeneratorSchema)` to create a new message.
 */
export const TestParsingMergeLite_RepeatedFieldsGeneratorSchema: GenMessage<TestParsingMergeLite_RepeatedFieldsGenerator> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9, 0);

/**
 * @generated from message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1
 */
export type TestParsingMergeLite_RepeatedFieldsGenerator_Group1 = Message<"proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1"> & {
  /**
   * @generated from field: proto2_unittest.TestAllTypesLite field1 = 11;
   */
  field1?: TestAllTypesLite;
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1.
 * Use `create(TestParsingMergeLite_RepeatedFieldsGenerator_Group1Schema)` to create a new message.
 */
export const TestParsingMergeLite_RepeatedFieldsGenerator_Group1Schema: GenMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group1> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9, 0, 0);

/**
 * @generated from message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2
 */
export type TestParsingMergeLite_RepeatedFieldsGenerator_Group2 = Message<"proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2"> & {
  /**
   * @generated from field: proto2_unittest.TestAllTypesLite field1 = 21;
   */
  field1?: TestAllTypesLite;
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2.
 * Use `create(TestParsingMergeLite_RepeatedFieldsGenerator_Group2Schema)` to create a new message.
 */
export const TestParsingMergeLite_RepeatedFieldsGenerator_Group2Schema: GenMessage<TestParsingMergeLite_RepeatedFieldsGenerator_Group2> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9, 0, 1);

/**
 * @generated from message proto2_unittest.TestParsingMergeLite.OptionalGroup
 */
export type TestParsingMergeLite_OptionalGroup = Message<"proto2_unittest.TestParsingMergeLite.OptionalGroup"> & {
  /**
   * @generated from field: proto2_unittest.TestAllTypesLite optional_group_all_types = 11;
   */
  optionalGroupAllTypes?: TestAllTypesLite;
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.OptionalGroup.
 * Use `create(TestParsingMergeLite_OptionalGroupSchema)` to create a new message.
 */
export const TestParsingMergeLite_OptionalGroupSchema: GenMessage<TestParsingMergeLite_OptionalGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9, 1);

/**
 * @generated from message proto2_unittest.TestParsingMergeLite.RepeatedGroup
 */
export type TestParsingMergeLite_RepeatedGroup = Message<"proto2_unittest.TestParsingMergeLite.RepeatedGroup"> & {
  /**
   * @generated from field: proto2_unittest.TestAllTypesLite repeated_group_all_types = 21;
   */
  repeatedGroupAllTypes?: TestAllTypesLite;
};

/**
 * Describes the message proto2_unittest.TestParsingMergeLite.RepeatedGroup.
 * Use `create(TestParsingMergeLite_RepeatedGroupSchema)` to create a new message.
 */
export const TestParsingMergeLite_RepeatedGroupSchema: GenMessage<TestParsingMergeLite_RepeatedGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 9, 2);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite optional_ext = 1000;
 */
export const TestParsingMergeLite_optional_ext: GenExtension<TestParsingMergeLite, TestAllTypesLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 9, 0);

/**
 * @generated from extension: repeated proto2_unittest.TestAllTypesLite repeated_ext = 1001;
 */
export const TestParsingMergeLite_repeated_ext: GenExtension<TestParsingMergeLite, TestAllTypesLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 9, 1);

/**
 * Test that the correct exception is thrown by parseFrom in a corner case
 * involving merging, extensions, and required fields.
 *
 * @generated from message proto2_unittest.TestMergeExceptionLite
 */
export type TestMergeExceptionLite = Message<"proto2_unittest.TestMergeExceptionLite"> & {
  /**
   * @generated from field: proto2_unittest.TestAllExtensionsLite all_extensions = 1;
   */
  allExtensions?: TestAllExtensionsLite;
};

/**
 * Describes the message proto2_unittest.TestMergeExceptionLite.
 * Use `create(TestMergeExceptionLiteSchema)` to create a new message.
 */
export const TestMergeExceptionLiteSchema: GenMessage<TestMergeExceptionLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 10);

/**
 * TestEmptyMessageLite is used to test unknown fields support in lite mode.
 *
 * @generated from message proto2_unittest.TestEmptyMessageLite
 */
export type TestEmptyMessageLite = Message<"proto2_unittest.TestEmptyMessageLite"> & {
};

/**
 * Describes the message proto2_unittest.TestEmptyMessageLite.
 * Use `create(TestEmptyMessageLiteSchema)` to create a new message.
 */
export const TestEmptyMessageLiteSchema: GenMessage<TestEmptyMessageLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 11);

/**
 * Like above, but declare all field numbers as potential extensions.  No
 * actual extensions should ever be defined for this type.
 *
 * @generated from message proto2_unittest.TestEmptyMessageWithExtensionsLite
 */
export type TestEmptyMessageWithExtensionsLite = Message<"proto2_unittest.TestEmptyMessageWithExtensionsLite"> & {
};

/**
 * Describes the message proto2_unittest.TestEmptyMessageWithExtensionsLite.
 * Use `create(TestEmptyMessageWithExtensionsLiteSchema)` to create a new message.
 */
export const TestEmptyMessageWithExtensionsLiteSchema: GenMessage<TestEmptyMessageWithExtensionsLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 12);

/**
 * @generated from message proto2_unittest.V1MessageLite
 */
export type V1MessageLite = Message<"proto2_unittest.V1MessageLite"> & {
  /**
   * @generated from field: int32 int_field = 1 [features.field_presence = LEGACY_REQUIRED];
   */
  intField: number;

  /**
   * @generated from field: proto2_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
   */
  enumField: V1EnumLite;
};

/**
 * Describes the message proto2_unittest.V1MessageLite.
 * Use `create(V1MessageLiteSchema)` to create a new message.
 */
export const V1MessageLiteSchema: GenMessage<V1MessageLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 13);

/**
 * @generated from message proto2_unittest.V2MessageLite
 */
export type V2MessageLite = Message<"proto2_unittest.V2MessageLite"> & {
  /**
   * @generated from field: int32 int_field = 1 [features.field_presence = LEGACY_REQUIRED];
   */
  intField: number;

  /**
   * @generated from field: proto2_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
   */
  enumField: V2EnumLite;
};

/**
 * Describes the message proto2_unittest.V2MessageLite.
 * Use `create(V2MessageLiteSchema)` to create a new message.
 */
export const V2MessageLiteSchema: GenMessage<V2MessageLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 14);

/**
 * @generated from message proto2_unittest.TestHugeFieldNumbersLite
 */
export type TestHugeFieldNumbersLite = Message<"proto2_unittest.TestHugeFieldNumbersLite"> & {
  /**
   * @generated from field: int32 optional_int32 = 536870000;
   */
  optionalInt32: number;

  /**
   * @generated from field: int32 fixed_32 = 536870001;
   */
  fixed32: number;

  /**
   * @generated from field: repeated int32 repeated_int32 = 536870002;
   */
  repeatedInt32: number[];

  /**
   * @generated from field: repeated int32 packed_int32 = 536870003 [features.repeated_field_encoding = PACKED];
   */
  packedInt32: number[];

  /**
   * @generated from field: proto2_unittest.ForeignEnumLite optional_enum = 536870004;
   */
  optionalEnum: ForeignEnumLite;

  /**
   * @generated from field: string optional_string = 536870005;
   */
  optionalString: string;

  /**
   * @generated from field: bytes optional_bytes = 536870006;
   */
  optionalBytes: Uint8Array;

  /**
   * @generated from field: proto2_unittest.ForeignMessageLite optional_message = 536870007;
   */
  optionalMessage?: ForeignMessageLite;

  /**
   * @generated from field: proto2_unittest.TestHugeFieldNumbersLite.OptionalGroup optionalgroup = 536870008 [features.message_encoding = DELIMITED];
   */
  optionalgroup?: TestHugeFieldNumbersLite_OptionalGroup;

  /**
   * @generated from field: map<string, string> string_string_map = 536870010;
   */
  stringStringMap: { [key: string]: string };

  /**
   * @generated from oneof proto2_unittest.TestHugeFieldNumbersLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: uint32 oneof_uint32 = 536870011;
     */
    value: number;
    case: "oneofUint32";
  } | {
    /**
     * @generated from field: proto2_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
     */
    value: TestAllTypesLite;
    case: "oneofTestAllTypes";
  } | {
    /**
     * @generated from field: string oneof_string = 536870013;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 536870014;
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message proto2_unittest.TestHugeFieldNumbersLite.
 * Use `create(TestHugeFieldNumbersLiteSchema)` to create a new message.
 */
export const TestHugeFieldNumbersLiteSchema: GenMessage<TestHugeFieldNumbersLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 15);

/**
 * @generated from message proto2_unittest.TestHugeFieldNumbersLite.OptionalGroup
 */
export type TestHugeFieldNumbersLite_OptionalGroup = Message<"proto2_unittest.TestHugeFieldNumbersLite.OptionalGroup"> & {
  /**
   * @generated from field: int32 group_a = 536870009;
   */
  groupA: number;
};

/**
 * Describes the message proto2_unittest.TestHugeFieldNumbersLite.OptionalGroup.
 * Use `create(TestHugeFieldNumbersLite_OptionalGroupSchema)` to create a new message.
 */
export const TestHugeFieldNumbersLite_OptionalGroupSchema: GenMessage<TestHugeFieldNumbersLite_OptionalGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 15, 0);

/**
 * @generated from message proto2_unittest.TestOneofParsingLite
 */
export type TestOneofParsingLite = Message<"proto2_unittest.TestOneofParsingLite"> & {
  /**
   * @generated from oneof proto2_unittest.TestOneofParsingLite.oneof_field
   */
  oneofField: {
    /**
     * @generated from field: int32 oneof_int32 = 1;
     */
    value: number;
    case: "oneofInt32";
  } | {
    /**
     * @generated from field: proto2_unittest.TestAllTypesLite oneof_submessage = 2;
     */
    value: TestAllTypesLite;
    case: "oneofSubmessage";
  } | {
    /**
     * @generated from field: string oneof_string = 3;
     */
    value: string;
    case: "oneofString";
  } | {
    /**
     * @generated from field: bytes oneof_bytes = 4 [default = "default bytes"];
     */
    value: Uint8Array;
    case: "oneofBytes";
  } | {
    /**
     * @generated from field: string oneof_string_cord = 5 [default = "default Cord"];
     */
    value: string;
    case: "oneofStringCord";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_cord = 6;
     */
    value: Uint8Array;
    case: "oneofBytesCord";
  } | {
    /**
     * @generated from field: string oneof_string_string_piece = 7;
     */
    value: string;
    case: "oneofStringStringPiece";
  } | {
    /**
     * @generated from field: bytes oneof_bytes_string_piece = 8 [default = "default StringPiece"];
     */
    value: Uint8Array;
    case: "oneofBytesStringPiece";
  } | {
    /**
     * @generated from field: proto2_unittest.V2EnumLite oneof_enum = 9;
     */
    value: V2EnumLite;
    case: "oneofEnum";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message proto2_unittest.TestOneofParsingLite.
 * Use `create(TestOneofParsingLiteSchema)` to create a new message.
 */
export const TestOneofParsingLiteSchema: GenMessage<TestOneofParsingLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 16);

/**
 * @generated from message proto2_unittest.TestMessageSetLite
 */
export type TestMessageSetLite = Message<"proto2_unittest.TestMessageSetLite"> & {
};

/**
 * Describes the message proto2_unittest.TestMessageSetLite.
 * Use `create(TestMessageSetLiteSchema)` to create a new message.
 */
export const TestMessageSetLiteSchema: GenMessage<TestMessageSetLite> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 17);

/**
 * The following four messages are set up to test for wire compatibility between
 * packed and non-packed repeated fields. We use the field number 2048, because
 * that is large enough to require a 3-byte varint for the tag.
 *
 * @generated from message proto2_unittest.PackedInt32
 */
export type PackedInt32 = Message<"proto2_unittest.PackedInt32"> & {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048 [features.repeated_field_encoding = PACKED];
   */
  repeatedInt32: number[];
};

/**
 * Describes the message proto2_unittest.PackedInt32.
 * Use `create(PackedInt32Schema)` to create a new message.
 */
export const PackedInt32Schema: GenMessage<PackedInt32> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 18);

/**
 * @generated from message proto2_unittest.NonPackedInt32
 */
export type NonPackedInt32 = Message<"proto2_unittest.NonPackedInt32"> & {
  /**
   * @generated from field: repeated int32 repeated_int32 = 2048;
   */
  repeatedInt32: number[];
};

/**
 * Describes the message proto2_unittest.NonPackedInt32.
 * Use `create(NonPackedInt32Schema)` to create a new message.
 */
export const NonPackedInt32Schema: GenMessage<NonPackedInt32> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 19);

/**
 * @generated from message proto2_unittest.PackedFixed32
 */
export type PackedFixed32 = Message<"proto2_unittest.PackedFixed32"> & {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048 [features.repeated_field_encoding = PACKED];
   */
  repeatedFixed32: number[];
};

/**
 * Describes the message proto2_unittest.PackedFixed32.
 * Use `create(PackedFixed32Schema)` to create a new message.
 */
export const PackedFixed32Schema: GenMessage<PackedFixed32> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 20);

/**
 * @generated from message proto2_unittest.NonPackedFixed32
 */
export type NonPackedFixed32 = Message<"proto2_unittest.NonPackedFixed32"> & {
  /**
   * @generated from field: repeated fixed32 repeated_fixed32 = 2048;
   */
  repeatedFixed32: number[];
};

/**
 * Describes the message proto2_unittest.NonPackedFixed32.
 * Use `create(NonPackedFixed32Schema)` to create a new message.
 */
export const NonPackedFixed32Schema: GenMessage<NonPackedFixed32> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 21);

/**
 * Test an enum that has multiple values with the same number.
 *
 * @generated from message proto2_unittest.DupEnum
 */
export type DupEnum = Message<"proto2_unittest.DupEnum"> & {
};

/**
 * Describes the message proto2_unittest.DupEnum.
 * Use `create(DupEnumSchema)` to create a new message.
 */
export const DupEnumSchema: GenMessage<DupEnum> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 22);

/**
 * @generated from enum proto2_unittest.DupEnum.TestEnumWithDupValueLite
 */
export enum DupEnum_TestEnumWithDupValueLite {
  /**
   * @generated from enum value: FOO1 = 1;
   */
  FOO1 = 1,

  /**
   * @generated from enum value: BAR1 = 2;
   */
  BAR1 = 2,

  /**
   * @generated from enum value: BAZ = 3;
   */
  BAZ = 3,

  /**
   * @generated from enum value: FOO2 = 1;
   */
  FOO2 = 1,

  /**
   * @generated from enum value: BAR2 = 2;
   */
  BAR2 = 2,
}

/**
 * Describes the enum proto2_unittest.DupEnum.TestEnumWithDupValueLite.
 */
export const DupEnum_TestEnumWithDupValueLiteSchema: GenEnum<DupEnum_TestEnumWithDupValueLite> = /*@__PURE__*/
  enumDesc(file_google_protobuf_unittest_lite, 22, 0);

/**
 * @generated from message proto2_unittest.RecursiveMessage
 */
export type RecursiveMessage = Message<"proto2_unittest.RecursiveMessage"> & {
  /**
   * @generated from field: proto2_unittest.RecursiveMessage recurse = 1;
   */
  recurse?: RecursiveMessage;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message proto2_unittest.RecursiveMessage.
 * Use `create(RecursiveMessageSchema)` to create a new message.
 */
export const RecursiveMessageSchema: GenMessage<RecursiveMessage> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 23);

/**
 * @generated from message proto2_unittest.RecursiveGroup
 */
export type RecursiveGroup = Message<"proto2_unittest.RecursiveGroup"> & {
  /**
   * @generated from field: proto2_unittest.RecursiveGroup recurse = 1 [features.message_encoding = DELIMITED];
   */
  recurse?: RecursiveGroup;
};

/**
 * Describes the message proto2_unittest.RecursiveGroup.
 * Use `create(RecursiveGroupSchema)` to create a new message.
 */
export const RecursiveGroupSchema: GenMessage<RecursiveGroup> = /*@__PURE__*/
  messageDesc(file_google_protobuf_unittest_lite, 24);

/**
 * @generated from enum proto2_unittest.ForeignEnumLite
 */
export enum ForeignEnumLite {
  /**
   * @generated from enum value: FOREIGN_LITE_FOO = 4;
   */
  FOREIGN_LITE_FOO = 4,

  /**
   * @generated from enum value: FOREIGN_LITE_BAZ = 6;
   */
  FOREIGN_LITE_BAZ = 6,

  /**
   * @generated from enum value: FOREIGN_LITE_BAR = 5;
   */
  FOREIGN_LITE_BAR = 5,
}

/**
 * Describes the enum proto2_unittest.ForeignEnumLite.
 */
export const ForeignEnumLiteSchema: GenEnum<ForeignEnumLite> = /*@__PURE__*/
  enumDesc(file_google_protobuf_unittest_lite, 0);

/**
 * @generated from enum proto2_unittest.V1EnumLite
 */
export enum V1EnumLite {
  /**
   * @generated from enum value: V1_FIRST = 1;
   */
  V1_FIRST = 1,
}

/**
 * Describes the enum proto2_unittest.V1EnumLite.
 */
export const V1EnumLiteSchema: GenEnum<V1EnumLite> = /*@__PURE__*/
  enumDesc(file_google_protobuf_unittest_lite, 1);

/**
 * @generated from enum proto2_unittest.V2EnumLite
 */
export enum V2EnumLite {
  /**
   * @generated from enum value: V2_FIRST = 1;
   */
  V2_FIRST = 1,

  /**
   * @generated from enum value: V2_SECOND = 2;
   */
  V2_SECOND = 2,
}

/**
 * Describes the enum proto2_unittest.V2EnumLite.
 */
export const V2EnumLiteSchema: GenEnum<V2EnumLite> = /*@__PURE__*/
  enumDesc(file_google_protobuf_unittest_lite, 2);

/**
 * Singular
 *
 * @generated from extension: int32 optional_int32_extension_lite = 1;
 */
export const optional_int32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 0);

/**
 * @generated from extension: int64 optional_int64_extension_lite = 2;
 */
export const optional_int64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 1);

/**
 * @generated from extension: uint32 optional_uint32_extension_lite = 3;
 */
export const optional_uint32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 2);

/**
 * @generated from extension: uint64 optional_uint64_extension_lite = 4;
 */
export const optional_uint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 3);

/**
 * @generated from extension: sint32 optional_sint32_extension_lite = 5;
 */
export const optional_sint32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 4);

/**
 * @generated from extension: sint64 optional_sint64_extension_lite = 6;
 */
export const optional_sint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 5);

/**
 * @generated from extension: fixed32 optional_fixed32_extension_lite = 7;
 */
export const optional_fixed32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 6);

/**
 * @generated from extension: fixed64 optional_fixed64_extension_lite = 8;
 */
export const optional_fixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 7);

/**
 * @generated from extension: sfixed32 optional_sfixed32_extension_lite = 9;
 */
export const optional_sfixed32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 8);

/**
 * @generated from extension: sfixed64 optional_sfixed64_extension_lite = 10;
 */
export const optional_sfixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 9);

/**
 * @generated from extension: float optional_float_extension_lite = 11;
 */
export const optional_float_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 10);

/**
 * @generated from extension: double optional_double_extension_lite = 12;
 */
export const optional_double_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 11);

/**
 * @generated from extension: bool optional_bool_extension_lite = 13;
 */
export const optional_bool_extension_lite: GenExtension<TestAllExtensionsLite, boolean> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 12);

/**
 * @generated from extension: string optional_string_extension_lite = 14;
 */
export const optional_string_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 13);

/**
 * @generated from extension: bytes optional_bytes_extension_lite = 15;
 */
export const optional_bytes_extension_lite: GenExtension<TestAllExtensionsLite, Uint8Array> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 14);

/**
 * @generated from extension: proto2_unittest.OptionalGroup_extension_lite optionalgroup_extension_lite = 16 [features.message_encoding = DELIMITED];
 */
export const optionalgroup_extension_lite: GenExtension<TestAllExtensionsLite, OptionalGroup_extension_lite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 15);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedMessage optional_nested_message_extension_lite = 18;
 */
export const optional_nested_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 16);

/**
 * @generated from extension: proto2_unittest.ForeignMessageLite optional_foreign_message_extension_lite = 19;
 */
export const optional_foreign_message_extension_lite: GenExtension<TestAllExtensionsLite, ForeignMessageLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 17);

/**
 * @generated from extension: proto2_unittest_import.ImportMessageLite optional_import_message_extension_lite = 20;
 */
export const optional_import_message_extension_lite: GenExtension<TestAllExtensionsLite, ImportMessageLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 18);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedEnum optional_nested_enum_extension_lite = 21;
 */
export const optional_nested_enum_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 19);

/**
 * @generated from extension: proto2_unittest.ForeignEnumLite optional_foreign_enum_extension_lite = 22;
 */
export const optional_foreign_enum_extension_lite: GenExtension<TestAllExtensionsLite, ForeignEnumLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 20);

/**
 * @generated from extension: proto2_unittest_import.ImportEnumLite optional_import_enum_extension_lite = 23;
 */
export const optional_import_enum_extension_lite: GenExtension<TestAllExtensionsLite, ImportEnumLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 21);

/**
 * @generated from extension: string optional_string_piece_extension_lite = 24;
 */
export const optional_string_piece_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 22);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: string optional_cord_extension_lite = 25;
 */
export const optional_cord_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 23);

/**
 * @generated from extension: bytes optional_bytes_cord_extension_lite = 86;
 */
export const optional_bytes_cord_extension_lite: GenExtension<TestAllExtensionsLite, Uint8Array> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 24);

/**
 * @generated from extension: proto2_unittest_import.PublicImportMessageLite optional_public_import_message_extension_lite = 26;
 */
export const optional_public_import_message_extension_lite: GenExtension<TestAllExtensionsLite, PublicImportMessageLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 25);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedMessage optional_lazy_message_extension_lite = 27;
 */
export const optional_lazy_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 26);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message_extension_lite = 28;
 */
export const optional_unverified_lazy_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 27);

/**
 * Repeated
 *
 * @generated from extension: repeated int32 repeated_int32_extension_lite = 31;
 */
export const repeated_int32_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 28);

/**
 * @generated from extension: repeated int64 repeated_int64_extension_lite = 32;
 */
export const repeated_int64_extension_lite: GenExtension<TestAllExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 29);

/**
 * @generated from extension: repeated uint32 repeated_uint32_extension_lite = 33;
 */
export const repeated_uint32_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 30);

/**
 * @generated from extension: repeated uint64 repeated_uint64_extension_lite = 34;
 */
export const repeated_uint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 31);

/**
 * @generated from extension: repeated sint32 repeated_sint32_extension_lite = 35;
 */
export const repeated_sint32_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 32);

/**
 * @generated from extension: repeated sint64 repeated_sint64_extension_lite = 36;
 */
export const repeated_sint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 33);

/**
 * @generated from extension: repeated fixed32 repeated_fixed32_extension_lite = 37;
 */
export const repeated_fixed32_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 34);

/**
 * @generated from extension: repeated fixed64 repeated_fixed64_extension_lite = 38;
 */
export const repeated_fixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 35);

/**
 * @generated from extension: repeated sfixed32 repeated_sfixed32_extension_lite = 39;
 */
export const repeated_sfixed32_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 36);

/**
 * @generated from extension: repeated sfixed64 repeated_sfixed64_extension_lite = 40;
 */
export const repeated_sfixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 37);

/**
 * @generated from extension: repeated float repeated_float_extension_lite = 41;
 */
export const repeated_float_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 38);

/**
 * @generated from extension: repeated double repeated_double_extension_lite = 42;
 */
export const repeated_double_extension_lite: GenExtension<TestAllExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 39);

/**
 * @generated from extension: repeated bool repeated_bool_extension_lite = 43;
 */
export const repeated_bool_extension_lite: GenExtension<TestAllExtensionsLite, boolean[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 40);

/**
 * @generated from extension: repeated string repeated_string_extension_lite = 44;
 */
export const repeated_string_extension_lite: GenExtension<TestAllExtensionsLite, string[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 41);

/**
 * @generated from extension: repeated bytes repeated_bytes_extension_lite = 45;
 */
export const repeated_bytes_extension_lite: GenExtension<TestAllExtensionsLite, Uint8Array[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 42);

/**
 * @generated from extension: repeated proto2_unittest.RepeatedGroup_extension_lite repeatedgroup_extension_lite = 46 [features.message_encoding = DELIMITED];
 */
export const repeatedgroup_extension_lite: GenExtension<TestAllExtensionsLite, RepeatedGroup_extension_lite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 43);

/**
 * @generated from extension: repeated proto2_unittest.TestAllTypesLite.NestedMessage repeated_nested_message_extension_lite = 48;
 */
export const repeated_nested_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 44);

/**
 * @generated from extension: repeated proto2_unittest.ForeignMessageLite repeated_foreign_message_extension_lite = 49;
 */
export const repeated_foreign_message_extension_lite: GenExtension<TestAllExtensionsLite, ForeignMessageLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 45);

/**
 * @generated from extension: repeated proto2_unittest_import.ImportMessageLite repeated_import_message_extension_lite = 50;
 */
export const repeated_import_message_extension_lite: GenExtension<TestAllExtensionsLite, ImportMessageLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 46);

/**
 * @generated from extension: repeated proto2_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum_extension_lite = 51;
 */
export const repeated_nested_enum_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 47);

/**
 * @generated from extension: repeated proto2_unittest.ForeignEnumLite repeated_foreign_enum_extension_lite = 52;
 */
export const repeated_foreign_enum_extension_lite: GenExtension<TestAllExtensionsLite, ForeignEnumLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 48);

/**
 * @generated from extension: repeated proto2_unittest_import.ImportEnumLite repeated_import_enum_extension_lite = 53;
 */
export const repeated_import_enum_extension_lite: GenExtension<TestAllExtensionsLite, ImportEnumLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 49);

/**
 * @generated from extension: repeated string repeated_string_piece_extension_lite = 54;
 */
export const repeated_string_piece_extension_lite: GenExtension<TestAllExtensionsLite, string[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 50);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: repeated string repeated_cord_extension_lite = 55;
 */
export const repeated_cord_extension_lite: GenExtension<TestAllExtensionsLite, string[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 51);

/**
 * @generated from extension: repeated proto2_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message_extension_lite = 57;
 */
export const repeated_lazy_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 52);

/**
 * Singular with defaults
 *
 * @generated from extension: int32 default_int32_extension_lite = 61 [default = 41];
 */
export const default_int32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 53);

/**
 * @generated from extension: int64 default_int64_extension_lite = 62 [default = 42];
 */
export const default_int64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 54);

/**
 * @generated from extension: uint32 default_uint32_extension_lite = 63 [default = 43];
 */
export const default_uint32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 55);

/**
 * @generated from extension: uint64 default_uint64_extension_lite = 64 [default = 44];
 */
export const default_uint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 56);

/**
 * @generated from extension: sint32 default_sint32_extension_lite = 65 [default = -45];
 */
export const default_sint32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 57);

/**
 * @generated from extension: sint64 default_sint64_extension_lite = 66 [default = 46];
 */
export const default_sint64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 58);

/**
 * @generated from extension: fixed32 default_fixed32_extension_lite = 67 [default = 47];
 */
export const default_fixed32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 59);

/**
 * @generated from extension: fixed64 default_fixed64_extension_lite = 68 [default = 48];
 */
export const default_fixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 60);

/**
 * @generated from extension: sfixed32 default_sfixed32_extension_lite = 69 [default = 49];
 */
export const default_sfixed32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 61);

/**
 * @generated from extension: sfixed64 default_sfixed64_extension_lite = 70 [default = -50];
 */
export const default_sfixed64_extension_lite: GenExtension<TestAllExtensionsLite, bigint> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 62);

/**
 * @generated from extension: float default_float_extension_lite = 71 [default = 51.5];
 */
export const default_float_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 63);

/**
 * @generated from extension: double default_double_extension_lite = 72 [default = 52000];
 */
export const default_double_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 64);

/**
 * @generated from extension: bool default_bool_extension_lite = 73 [default = true];
 */
export const default_bool_extension_lite: GenExtension<TestAllExtensionsLite, boolean> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 65);

/**
 * @generated from extension: string default_string_extension_lite = 74 [default = "hello"];
 */
export const default_string_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 66);

/**
 * @generated from extension: bytes default_bytes_extension_lite = 75 [default = "world"];
 */
export const default_bytes_extension_lite: GenExtension<TestAllExtensionsLite, Uint8Array> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 67);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedEnum default_nested_enum_extension_lite = 81 [default = BAR];
 */
export const default_nested_enum_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedEnum> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 68);

/**
 * @generated from extension: proto2_unittest.ForeignEnumLite default_foreign_enum_extension_lite = 82 [default = FOREIGN_LITE_BAR];
 */
export const default_foreign_enum_extension_lite: GenExtension<TestAllExtensionsLite, ForeignEnumLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 69);

/**
 * @generated from extension: proto2_unittest_import.ImportEnumLite default_import_enum_extension_lite = 83 [default = IMPORT_LITE_BAR];
 */
export const default_import_enum_extension_lite: GenExtension<TestAllExtensionsLite, ImportEnumLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 70);

/**
 * @generated from extension: string default_string_piece_extension_lite = 84 [default = "abc"];
 */
export const default_string_piece_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 71);

/**
 * TODO: ctype=CORD is not supported for extension. Add
 * ctype=CORD option back after it is supported.
 *
 * @generated from extension: string default_cord_extension_lite = 85 [default = "123"];
 */
export const default_cord_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 72);

/**
 * For oneof test
 *
 * @generated from extension: uint32 oneof_uint32_extension_lite = 111;
 */
export const oneof_uint32_extension_lite: GenExtension<TestAllExtensionsLite, number> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 73);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite.NestedMessage oneof_nested_message_extension_lite = 112;
 */
export const oneof_nested_message_extension_lite: GenExtension<TestAllExtensionsLite, TestAllTypesLite_NestedMessage> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 74);

/**
 * @generated from extension: string oneof_string_extension_lite = 113;
 */
export const oneof_string_extension_lite: GenExtension<TestAllExtensionsLite, string> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 75);

/**
 * @generated from extension: bytes oneof_bytes_extension_lite = 114;
 */
export const oneof_bytes_extension_lite: GenExtension<TestAllExtensionsLite, Uint8Array> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 76);

/**
 * @generated from extension: repeated int32 packed_int32_extension_lite = 90 [features.repeated_field_encoding = PACKED];
 */
export const packed_int32_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 77);

/**
 * @generated from extension: repeated int64 packed_int64_extension_lite = 91 [features.repeated_field_encoding = PACKED];
 */
export const packed_int64_extension_lite: GenExtension<TestPackedExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 78);

/**
 * @generated from extension: repeated uint32 packed_uint32_extension_lite = 92 [features.repeated_field_encoding = PACKED];
 */
export const packed_uint32_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 79);

/**
 * @generated from extension: repeated uint64 packed_uint64_extension_lite = 93 [features.repeated_field_encoding = PACKED];
 */
export const packed_uint64_extension_lite: GenExtension<TestPackedExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 80);

/**
 * @generated from extension: repeated sint32 packed_sint32_extension_lite = 94 [features.repeated_field_encoding = PACKED];
 */
export const packed_sint32_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 81);

/**
 * @generated from extension: repeated sint64 packed_sint64_extension_lite = 95 [features.repeated_field_encoding = PACKED];
 */
export const packed_sint64_extension_lite: GenExtension<TestPackedExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 82);

/**
 * @generated from extension: repeated fixed32 packed_fixed32_extension_lite = 96 [features.repeated_field_encoding = PACKED];
 */
export const packed_fixed32_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 83);

/**
 * @generated from extension: repeated fixed64 packed_fixed64_extension_lite = 97 [features.repeated_field_encoding = PACKED];
 */
export const packed_fixed64_extension_lite: GenExtension<TestPackedExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 84);

/**
 * @generated from extension: repeated sfixed32 packed_sfixed32_extension_lite = 98 [features.repeated_field_encoding = PACKED];
 */
export const packed_sfixed32_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 85);

/**
 * @generated from extension: repeated sfixed64 packed_sfixed64_extension_lite = 99 [features.repeated_field_encoding = PACKED];
 */
export const packed_sfixed64_extension_lite: GenExtension<TestPackedExtensionsLite, bigint[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 86);

/**
 * @generated from extension: repeated float packed_float_extension_lite = 100 [features.repeated_field_encoding = PACKED];
 */
export const packed_float_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 87);

/**
 * @generated from extension: repeated double packed_double_extension_lite = 101 [features.repeated_field_encoding = PACKED];
 */
export const packed_double_extension_lite: GenExtension<TestPackedExtensionsLite, number[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 88);

/**
 * @generated from extension: repeated bool packed_bool_extension_lite = 102 [features.repeated_field_encoding = PACKED];
 */
export const packed_bool_extension_lite: GenExtension<TestPackedExtensionsLite, boolean[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 89);

/**
 * @generated from extension: repeated proto2_unittest.ForeignEnumLite packed_enum_extension_lite = 103 [features.repeated_field_encoding = PACKED];
 */
export const packed_enum_extension_lite: GenExtension<TestPackedExtensionsLite, ForeignEnumLite[]> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 90);

/**
 * @generated from extension: proto2_unittest.TestAllTypesLite test_all_types_lite = 536860000;
 */
export const test_all_types_lite: GenExtension<TestHugeFieldNumbersLite, TestAllTypesLite> = /*@__PURE__*/
  extDesc(file_google_protobuf_unittest_lite, 91);

